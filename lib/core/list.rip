# class (System.Enumerable) {
class {
	@.+ = -> (other) {
		@.class.+(@, other)
	}

	@.<< = -> (new_item) {
		@ + [ new_item ]
	}

	@.fold = -> (initial, folder) {
		@.class.fold(folder, initial, @)
	}

	@.map = -> (mapper) {
		@.class.map(mapper, @)
	}

	fold = -> (folder, initial, items) {
		if (items.length == 0) {
			initial
		} else {
			fold(folder, folder(initial, items.head), items.tail)
		}
	}

	map = -> (mapper, items) {
		fold(-> (memo, item) {
			memo << mapper(item)
		}, [], items)
	}

	to_string = -> { 'System.List' }
}
